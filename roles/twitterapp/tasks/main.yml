- name: Install apt packages for git, nginx, and pip3
  apt:
    pkg: "{{item}}"
    state: present
  with_items:
    - python3-dev
    - git
    - nginx

- name: set up the pip installation via the shell
  shell: curl https://bootstrap.pypa.io/get-pip.py | sudo python3
  ignore_errors: yes

- name: copy the requirements file over
  copy:
    src: global_requirements.txt
    dest: /tmp/global_requirements.txt

- name: pip install the required python3 libs (including uwsgi)
  pip:
    executable: pip3.4
    requirements: /tmp/global_requirements.txt

- name: Setup folders
  file:
    dest: "{{item}}"
    owner: www-data
    group: www-data
    mode: 0775
    state: directory
  with_items:
    - "/var/app/{{appname}}"
    - "/var/log/{{appname}}"
    - "/var/www/{{appname}}"

- name: Setup nginx log files
  copy:
    src: "{{item}}"
    dest: "/var/log/{{appname}}/{{item}}"
    owner: www-data
    group: www-data
    mode: 0770
  with_items:
    - access.log
    - error.log
    - wsgi.log


- name: Setup the MySQL database for the application
  mysql_db:
    name: "{{appname}}"
    login_user: root
    login_password: "{{mysql_root_password}}"
    encoding: utf8
    collation: utf8_general_ci


- name: Bring over the requirements file
  copy:
    src: "requirements.txt"
    dest: "/var/app/{{appname}}/requirements.txt"
    owner: www-data
    group: www-data
    mode: 0664

- name: install pip packages
  pip:
    virtualenv: "/var/app/{{appname}}/venv/"
    executable: pip3.4
    requirements: "/var/app/{{appname}}/requirements.txt"

- name: Copy over core application files.
  copy:
    src: "{{item}}"
    dest: "/var/app/{{appname}}/{{item}}"
    owner: www-data
    group: www-data
    mode: 0664
  with_items:
    - view.py
    - model.py
  notify: "restart {{appname}}"


- name: Copy over html and javascript static assets
  copy:
    src: static
    dest: "/var/www/{{appname}}/"
    mode: 0664
    owner: www-data
    group: www-data

- name: Copy over the flask template
  copy:
    src: templates
    dest: "/var/app/{{appname}}/"
    mode: 0664
    owner: www-data
    group: www-data
  notify: "restart {{appname}}"

- name: copy over nginx template
  template:
    src: nginx_template.conf
    dest: "/etc/nginx/sites-available/{{appname}}.conf"
    mode: 0664
    owner: www-data
    group: www-data
  notify: restart nginx

- name: set up the ssl key
  command: openssl req -x509 -days 365 -nodes -newkey rsa:4096 -out /var/app/{{appname}}/{{appname}}.crt -keyout /var/app/{{appname}}/{{appname}}.key -subj "/C={{certcountry}}/ST={{certstate}}/L={{certcity}}/O=IT/CN=P{{domain}}"
  notify: restart nginx

- name: copy over the template for config.ini
  template:
    src: config.ini.template
    dest: "/var/app/{{appname}}/config.ini"
    mode: 0660
    owner: www-data
    group: www-data
  notify: "restart {{appname}}"


- name: copy over the uwsgi template
  template:
    src: uwsgi_config.template
    dest: "/var/app/{{appname}}/{{appname}}.ini"
    mode: 0664
    owner: www-data
    group: www-data
  notify: "restart {{appname}}"


- name: symlink setup
  file:
    path: "/etc/nginx/sites-enabled/{{appname}}.conf"
    src: "/etc/nginx/sites-available/{{appname}}.conf"
    state: link
  notify: restart nginx


- name: Copy over the upstart service script
  template:
    src: upstart.template
    dest: "/etc/init/{{appname}}.conf"
    owner: www-data
    group: www-data
    mode: 0660
  notify: "restart {{appname}}"
